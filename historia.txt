### Ejercicio 1
git init  #crear repositorio
# A continuación, he creado las carpetas con mkdir

### Ejercicio 2
# He copiado el documento v1 a la carpeta especificada
touch historia.txt # He creado historia.txt en la raiz

### Ejercicio 3
 git add . #desde la raiz, guardar todos los subdirectorios y documentos
git commit -m "Ej3: he creado las carpetas iniciales del repositorio y he añadido la primera version del doc de cambios y las plantillas"

### Ejercicio 4
git log #para averiguar el identificador del commit
git tag -a R1 b84087c5a91f5d897211d263227e9b7eef1e3d78 -m "Versión R1"  #etiquetar el commit como la versión "R1"

###Ejercicio 5 
git branch Mejoras  
git switch Mejoras # crear rama y cambiarse a esa
# incluyo  el fichero pdf con las propuestas de mejora en la carpeta ControldeCambios

###Ejercicio 6
# cambio el documento de ControlDeCambios para actualizarlo a la version 2
git add 2 #actualizar la staging area
git commit -m "Ej6: Propuestas y Doc v2 en la rama Mejoras" #confirmo los cambios, es una buena práctica antes de hacer merge

##Ejercicio 7
git switch master #cambio a la rama principal  
git merge Mejoras #mezclo la rama principal y Mejoras
git branch -d Mejoras  #borrar la rama Mejoras

### Ejercicio 8
# borro el pdf de las propuestas de mejora 

### Ejercicio 9 
git add .  #añadir todos los cambios al staging area
git commit -m "Ej9: tras mezclar rama master y Mejoras, he borrado el pdf de Propuestas de mejoras" #commit de dichos cambios
git log #para averiguar el identificador del commit
git tag -a R2  f56a6d1f3e3f4ed73ef224f0c7f82ad528cc528d -m "Versión R2"  #etiquetar el commit como la versión "R2"

### Ejercicio 10
#sustituyo el doc de la version 2 por la 3 y confirmo los cambios
git add . 
git commit -m "Ej10: Actualizo con version 3 del documento ControldeCambios"

### Ejercicio 11
git log 
git reset --hard  f56a6d1f3e3f4ed73ef224f0c7f82ad528cc528d  #vuelvo al estado del commit hecho en el ej9
#añado las plantillas y el doc de la v3 y actualizo el repositorio
git add .
git commit -m "Ej11: he añadido las plantillas de la v3 y el doc de ControldeCambios v3"
git log #para averiguar el identificador del commit
git tag -a R3 54ae3fb37460ff3863a0e3a7876dc1ba411ecf57  -m "Versión 3" #etiquetar el commit como la versión "R3"

###Ejercicio 12
git remote add origin https://github.com/celcg/TrabajoENSO_CCG.git
git add .  #actualizar el repositorio 
git commit -m "Ej12: he creado un repositorio remoto y voy a enviar los cambios con la v3"
git push -u origin master  #enviar rama principal
git push --tags  #enviar tags

###Ejercicio 13 
git fetch origin  #traer cualquier cambio nuevo del repositorio remoto a tu repositorio local
git diff master origin/master #Comparar rama local con la rama remota
#otra opcion es git pull origin master, que fusionará los cambios

###Ejercicio 14
git diff origin/master historia.txt  #compara los cambios entre el txt actual y el del repositorio


###Ejercicio 15  Actualizar el repositorio remoto con todos los cambios.
git add .  #actualizar el repositorio 
git commit -m "Ej15: he terminado el trabajo y voy a subir todos los cambios de los ejercicios al repositorio remoto."
git push -u origin master  #enviar rama principal




